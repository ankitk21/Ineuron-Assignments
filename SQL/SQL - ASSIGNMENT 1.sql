---------------------------TASK 1 : CALCULATE TOTAL COST OF EACH PRODUCT IN SHOPPING LIST------------
CREATE DATABASE INEURON_TASK
USE INEURON_TASK
CREATE TABLE SHOPPING_HISTORY(
PRODUCTS VARCHAR(10) NOT NULL,
QUANTITY INT NOT NULL,
UNIT_PRICE INT NOT NULL
);
INSERT INTO SHOPPING_HISTORY VALUES
('BREAD', 3 , 10),
('MILK',7,3),
('BREAD',5,2),
('CHEESE',2,15),
('EGGS',12,30)

SELECT PRODUCTS,SUM(QUANTITY*UNIT_PRICE) AS TOTAL_SPENT FROM SHOPPING_HISTORY
GROUP BY PRODUCTS


---------------------------TASK 2: TELECOMMUNICATION COMPANY--------------------------------------------------
CREATE TABLE PHONES(
NAME VARCHAR(20) NOT NULL UNIQUE,
PH_NO INT NOT NULL UNIQUE)

CREATE TABLE CALLS(
ID INT NOT NULL UNIQUE,
CALLER INT NOT NULL,
CALLEE INT NOT NULL,
DURATION INT NOT NULL
)

INSERT INTO PHONES VALUES
('JACK',1234),('LENA',3333),('MARK',9999),('ANNA',7582)

INSERT INTO CALLS VALUES
(25,1234,7582,8),(7,9999,7582,1),(18,9999,3333,4),(2,7582,3333,3),(3,3333,1234,1),(21,3333,1234,1)


CREATE TABLE T1 AS
SELECT P.NAME,C.CALLER,C.DURATION FROM PHONES P
INNER JOIN CALLS C
ON P.PH_NO = C.CALLER

CREATE TABLE T2 AS
SELECT P.NAME,C.CALLEE,C.DURATION FROM PHONES P
INNER JOIN CALLS C
ON P.PH_NO = C.CALLEE

CREATE TABLE T3 AS 
SELECT NAME,SUM(DURATION) AS TOTAL_DURATION FROM 
    (SELECT NAME,SUM(DURATION) AS DURATION FROM T2
    GROUP BY NAME
    UNION
    SELECT NAME,SUM(DURATION) AS DURATION FROM T1
    GROUP BY NAME)
GROUP BY NAME

SELECT NAME FROM T3 WHERE TOTAL_DURATION>=10


---------------------------TASK 2.1: TELECOMMUNICATION COMPANY--------------------------------------------------

CREATE TABLE PHONES1(
NAME VARCHAR(20) NOT NULL UNIQUE,
PH_NO INT NOT NULL UNIQUE)

CREATE TABLE CALLS1(
ID INT NOT NULL UNIQUE,
CALLER INT NOT NULL,
CALLEE INT NOT NULL,
DURATION INT NOT NULL
)
INSERT INTO PHONES1 VALUES
('JOHN',6356),('ADDISON',4315),('KATE',8003),('GINNY',9831)

INSERT INTO CALLS1 VALUES
(65,8003,9831,7),(100,9831,8003,3),(145,4315,9831,18)

CREATE TABLE T4 AS 
SELECT NAME ,SUM(DURATION) AS TOTAL_DURATION FROM
(SELECT P.NAME,C.DURATION AS DURATION FROM PHONES1 P
INNER JOIN CALLS1 C
ON P.PH_NO = C.CALLER
UNION
SELECT P.NAME,C.DURATION AS DURATION FROM PHONES1 P
INNER JOIN CALLS1 C
ON P.PH_NO = C.CALLEE)
GROUP BY NAME

SELECT NAME FROM T4 WHERE TOTAL_DURATION >= 10



---------------------------TASK 3: BANK TRANSACTION--------------------------------------------------

CREATE TABLE `TRANSACTION`(
AMOUNT INT NOT NULL,
TR_DATE DATE NOT NULL
)

INSERT INTO `TRANSACTION` VALUES
(1000,'2020-01-06'),
(-10,'2020-01-14'),
(-75,'2020-01-20'),
(-5,'2020-01-25'),
(-4,'2020-01-29'),
(2000,'2020-03-10'),
(-75,'2020-03-12'),
(-20,'2020-03-15'),
(40,'2020-03-15'),
(-50,'2020-03-17'),
(200,'2020-10-10'),
(-200,'2020-10-10');


CREATE TABLE CREDIT_TRANSACTION AS
    SELECT * FROM 
    (SELECT MONTH(TR_DATE) AS MONTH,REPLACE(SUM(AMOUNT),'-','') as Total_credit_amount,count(month(tr_date)) as total_credit_tran
    FROM `TRANSACTION` WHERE AMOUNT LIKE '-%' GROUP BY MONTH(TR_DATE)) 
   
CREATE TABLE CHARGES AS
SELECT MONTH , TOTAL_CREDIT_AMOUNT,
CASE
   WHEN TOTAL_CREDIT_TRAN>=3 AND TOTAL_CREDIT_AMOUNT>=100 
   THEN 0
   ELSE 5
   END AS CREDIT_CHARGES
FROM CREDIT_TRANSACTION



SELECT
(SELECT SUM(AMOUNT) AS TOTAL_AMOUNT FROM `TRANSACTION`) -(SELECT (12-COUNT(*))*5 as credit_charges FROM CHARGES WHERE CREDIT_CHARGES = 0)
AS BALANCE


---------------------------TASK 3.1: BANK TRANSACTION--------------------------------------------------

CREATE TABLE TRANSACTION1(
AMOUNT INT NOT NULL,
TR_DATE DATE NOT NULL
)

INSERT INTO TRANSACTION1 VALUES
(1,'2020-06-29'),
(35,'2020-02-20'),
(-50,'2020-02-03'),
(-1,'2020-02-26'),
(-200,'2020-08-01'),
(-44,'2020-02-07'),
(-5,'2020-02-25'),
(1,'2020-06-29'),
(1,'2020-06-29'),
(-100,'2020-12-29'),
(-100,'2020-12-30'),
(-100,'2020-12-31');


    
   
CREATE TABLE CHARGES1 AS
SELECT MONTH , TOTAL_CREDIT_AMOUNT,
CASE
   WHEN TOTAL_CREDIT_TRAN>=3 AND TOTAL_CREDIT_AMOUNT>=100 
   THEN 0
   ELSE 5
   END AS CREDIT_CHARGES
FROM 
(SELECT * FROM 
(SELECT MONTH(TR_DATE) AS MONTH,REPLACE(SUM(AMOUNT),'-','') as Total_credit_amount,count(month(tr_date)) as total_credit_tran
FROM TRANSACTION1 WHERE AMOUNT LIKE '-%' GROUP BY MONTH(TR_DATE)))

SELECT
(SELECT SUM(AMOUNT) AS TOTAL_AMOUNT FROM TRANSACTION1) -(SELECT (12-COUNT(*))*5 as credit_charges FROM CHARGES1 WHERE CREDIT_CHARGES = 0)
AS BALANCE

---------------------------TASK 3.2: BANK TRANSACTION--------------------------------------------------
CREATE TABLE TRANSACTION2(
AMOUNT INT NOT NULL,
TR_DATE DATE NOT NULL
)

INSERT INTO TRANSACTION2 VALUES
(6000,'2020-04-03'),
(5000,'2020-04-02'),
(4000,'2020-04-01'),
(3000,'2020-03-01'),
(2000,'2020-02-01'),
(1000,'2020-01-01');

CREATE TABLE CHARGES2 AS
SELECT MONTH , TOTAL_CREDIT_AMOUNT,
CASE
   WHEN TOTAL_CREDIT_TRAN>=3 AND TOTAL_CREDIT_AMOUNT>=100 
   THEN 0
   ELSE 5
   END AS CREDIT_CHARGES
FROM 
(SELECT * FROM 
(SELECT MONTH(TR_DATE) AS MONTH,REPLACE(SUM(AMOUNT),'-','') as Total_credit_amount,count(month(tr_date)) as total_credit_tran
FROM TRANSACTION2 WHERE AMOUNT LIKE '-%' GROUP BY MONTH(TR_DATE)))

SELECT
(SELECT SUM(AMOUNT) AS TOTAL_AMOUNT FROM TRANSACTION2) -(SELECT (12-COUNT(*))*5 as credit_charges FROM CHARGES2 WHERE CREDIT_CHARGES = 0)
AS BALANCE
